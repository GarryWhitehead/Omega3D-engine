#version 450

layout (binding = 0) uniform uboBuffer
{
		float choppiness;
		float dx_offset;				// dx = 512 * 512
		float dy_offset;				// dy = 2 * (512 * 512)
		float ht_offset;				// ht = 0
		uint mapSize;
} ubo;

layout (std140, binding = 1) readonly buffer ssboBufferdx
{
	vec2 dxyzMap[];
};

layout (binding = 2, rgba32f) uniform image2D displacementImage;

layout (local_size_x = 16, local_size_y = 16) in;		// local work group size of 16 x 16

void main()
{
	uvec3 id = gl_GlobalInvocationID;
	
	uint index = id.y * ubo.mapSize + id.x;
	if(index >= ubo.mapSize * ubo.mapSize)
		return;
	
	// odds = -1 / evens +1
	uint res = ((id.x + id.y) & 1);
	uint signCorrect = (res == 0) ? 1 : -1;
	
	// update displacement map
	vec3 displace = vec3(0.0);
	displace.x = dxyzMap[index + uint(ubo.dx_offset)].x * signCorrect * ubo.choppiness;
	displace.y = dxyzMap[index + uint(ubo.dy_offset)].x * signCorrect * ubo.choppiness;
	displace.z = dxyzMap[index + uint(ubo.ht_offset)].x * signCorrect;
	
	imageStore(displacementImage, ivec2(gl_GlobalInvocationID.xy), vec4(displace, 1.0));
}